buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath('se.transmode.gradle:gradle-docker:1.2')
	}
}

plugins {
	id 'java'
	id 'eclipse'
	id 'application'
	id 'org.springframework.boot' version '1.5.7.RELEASE'
	id 'com.google.protobuf' version '0.8.3'
}

apply plugin: 'docker'

dependencyManagement {
	imports {
		mavenBom "org.springframework.boot:spring-boot-starter-parent:1.5.7.RELEASE"
	}
}

jar {
	baseName = 'gappless-backend'
	version =  '1.0.0'
}

repositories {
	mavenCentral()
	jcenter()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-validation')
	compile('org.lognet:grpc-spring-boot-starter:2.1.0')
	runtime('com.h2database:h2')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('io.grpc:grpc-testing:1.6.1')
}

protobuf {
	protoc {
		artifact = 'com.google.protobuf:protoc:3.3.0'
	}
	plugins {
		grpc {
			artifact = "io.grpc:protoc-gen-grpc-java:1.6.1"
		}
	}
	generateProtoTasks {
		ofSourceSet('main')*.plugins {
			grpc { }
		}
	}
	
	generatedFilesBaseDir = "$projectDir/src/generated"
}

task cleanProto {
	doFirst{
		delete("${protobuf.generatedFilesBaseDir}/main/grpc")
		delete("${protobuf.generatedFilesBaseDir}/main/java")
	}
}
clean.dependsOn cleanProto

task buildDocker(type: Docker, dependsOn: build) {
	applicationName = jar.baseName
	dockerfile = file('Dockerfile')
	doFirst {
		copy {
			from jar
			into "${stageDir}/build/libs"
		}
	}
}

sourceSets {
	main {
		java {
			srcDirs "${protobuf.generatedFilesBaseDir}/main/grpc"
			srcDirs "${protobuf.generatedFilesBaseDir}/main/java"
		}
	}
}

eclipse {
	classpath {
		defaultOutputDir = file("${projectDir}/build/classes")
	}
}