plugins {
	id 'eclipse'
	id 'com.github.blindpirate.gogradle' version "0.7.0"
}

golang {
	packagePath = 'edge-service'
}

dependencies {
	golang {
		build 'github.com/gorilla/mux'
		build 'github.com/golang/protobuf/proto'
		build 'google.golang.org/grpc'
		build 'github.com/DMXRoid/grpoolc'
		build 'golang.org/x/net/context'
		
		test 'github.com/golang/mock/gomock'
	}
}

task generateClient(type:Exec, dependsOn:installDependencies) {
	doFirst {
		mkdir 'protobuf'
	}
	environment 	'GOPATH', "${projectDir}/.gogradle/project_gopath:${System.env.GOPATH}"
	commandLine 'protoc', '--go_out=plugins=grpc:protobuf/', '--proto_path=../../../gappless-backend/src/main/proto', 'backend.proto'
}
task generateMock(type:Exec, dependsOn:generateClient) {
	doFirst {
		mkdir "/tmp/mock_protobuf"
		mkdir 'mock_protobuf'
	}
	environment 	'GOPATH', "${projectDir}/.gogradle/project_gopath:${System.env.GOPATH}"
	commandLine 'mockgen', '-destination', "/tmp/mock_protobuf/backend.pb.go", 'edge-service/protobuf', 'BookServiceClient,BookService_ListClient'
	doLast {
		copy {
			from("/tmp/mock_protobuf") {
				include 'backend.pb.go'
			}
			into 'mock_protobuf'
			filter{
				String line -> line.replaceAll("edge-service/vendor/","")
			}
		}
	}
}
installDependencies.finalizedBy generateMock


task cleanProto {
	doFirst{
		delete("${projectDir}/protobuf")
		delete("${projectDir}/mock_protobuf")
		delete("${projectDir}/vendor")
	}
}
clean.dependsOn cleanProto

task buildDocker(type: Exec, dependsOn: generateClient) {
	workingDir '../../'
	commandLine 'docker', 'build', '-t', 'gappless/gappless-edge', '.'
}
